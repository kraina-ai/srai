name: full-ci
on:
  push:
    branches:
      - '**'

jobs:
  # run-tests:
  #   uses: ./.github/workflows/_tests.yml

  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    # needs: [run-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pdm-project/setup-pdm@main
        name: Setup PDM
        with:
          python-version: 3.8
          architecture: x64
          enable-pep582: true
      # - name: Build package
      #   run: pdm build
      - name: Add PDM Publish plugin
        run: pdm plugin add pdm-publish
      - name: Publish distribution 📦 to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: pdm publish --repository pypi --password ${{ secrets.PYPI_API_TOKEN }}
      - run: echo ${GITHUB_WORKSPACE}
      - run: pwd
      - run: ls -la
      - uses: jannekem/run-python-script-action@v1
        name: Rename test version
        with:
          script: |
            import time
            import os

            for root, dirs, files in os.walk("${GITHUB_WORKSPACE}/dist"):
                for file in files:
                    if file.endswith(".whl"):
                        extension = '-py3-none-any.whl'
                    else:
                        extension = '.tar.gz'
                    first_part = file.replace(extension, '')
                    current_date = time.strftime("%Y%m%d%H%M%S")
                    new_name = f"{first_part}-{current_date}{extension}"
                    os.rename(os.path.join(root, file), os.path.join(root, new_name))

      - name: Publish distribution 📦 to Test PyPI
        # if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: pdm publish --repository testpypi --password ${{ secrets.PYPI_TEST_API_TOKEN }}

  # generate-docs:
  #   name: Publish library 📦 documentation 📄 to Github Pages 🌐
  #   needs: [run-tests]
  #   if: ${{ startsWith(github.ref, 'refs/tags') }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.8
  #     - name: Install pdm
  #       run: pip install pdm
  #     - name: Generate requirements.txt
  #       run: pdm export -G docs > requirements.txt
  #     - name: Install dependencies
  #       run: pip install -r requirements.txt
  #     - name: Deploy documentation
  #       run: mkdocs gh-deploy --force
