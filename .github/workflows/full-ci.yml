name: full-ci
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    name: Run tests 🛠️ on multiple systems 🖥️ and Python 🐍 versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: pdm-project/setup-pdm@main
        name: Setup PDM (Python ${{ matrix.python-version }})
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          enable-pep582: true
      - name: Install dependencies
        run: pdm install -d
      - name: Run tests with tox
        run: pdm run pytest tests/

  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Wait for build to succeed
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          running-workflow-name: tests
          ref: ${{ github.sha }}
      - uses: actions/checkout@v2
      - uses: pdm-project/setup-pdm@main
        name: Setup PDM
        with:
          python-version: 3.8
          architecture: x64
          enable-pep582: true
      # - name: Build package
      #   run: pdm build
      - name: Add PDM Publish plugin
        run: pdm plugin add pdm-publish
      - name: Publish distribution 📦 to Test PyPI
        run: pdm publish --repository testpypi --password ${{ secrets.PYPI_TEST_API_TOKEN }}
        # uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   password: ${{ secrets.PYPI_TEST_API_TOKEN }}
        #   repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution 📦 to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: pdm publish --repository pypi --password ${{ secrets.PYPI_API_TOKEN }}
        # uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   password: ${{ secrets.PYPI_API_TOKEN }}

  deploy:
    name: Publish library 📦 documentation 📄 to Github Pages 🌐
    needs: [run-tests]
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    steps:
      - name: Wait for build to succeed
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          running-workflow-name: tests
          ref: ${{ github.sha }}
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install pdm
        run: pip install pdm
      - name: Generate requirements.txt
        run: pdm export -G docs > requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Deploy documentation
        run: mkdocs gh-deploy --force
